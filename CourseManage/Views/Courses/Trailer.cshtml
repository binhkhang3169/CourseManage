@model Tuple<CourseManage.Entities.Course,IEnumerable<CourseManage.Entities.FeedBack>>

!-- Header Layout Content -->
<div class="mdk-header-layout__content page-content ">

    <div class="navbar navbar-light border-0 navbar-expand">
        <div class="container page__container">
            <div class="media flex-nowrap">
                <div class="media-left mr-16pt">
                    <a asp-action="Detail" asp-route-id="@Model.Item1?.CourseId">
                        <img src="@Url.Content(Model.Item1?.Thumbnail ?? "/path/to/default/image.png")"
                             width="40"
                             alt="Course Thumbnail"
                             class="rounded">
                    </a>
                </div>
                <div class="media-body">
                    <a asp-action="Detail" asp-route-id="@Model.Item1?.CourseId"
                       class="card-title text-body mb-0">
                        @Model.Item1?.Title
                    </a>
                    <p class="lh-1 d-flex align-items-center mb-0">
                        <span class="text-50 small font-weight-bold mr-8pt">@Model.Item1?.Instructor?.Name</span>
                        <span class="text-50 small">@Model.Item1?.Topic?.Name</span>
                    </p>
                </div>
            </div>
        </div>
    </div>
    <div class="bg-primary pb-lg-64pt py-32pt">
        <div class="container page__container">
            <div class="js-player embed-responsive embed-responsive-16by9 mb-32pt">
                <div class="player embed-responsive-item">
                    <div class="player__content">
                        <div class="player__image"
                             style="--player-image: url(@(Model.Item1?.Thumbnail ?? "/path/to/default/image.png"))">
                        </div>
                        <a href="#"
                           class="player__play bg-primary">
                            <span class="material-icons">play_arrow</span>
                        </a>
                    </div>
                    <div class="player__embed d-none">
                        <iframe class="embed-responsive-item"
                                src="@Model.Item1?.TrailerUrl ?? " allowfullscreen="">
                        </iframe>
                    </div>
                </div>
            </div>

            @{
                var firstChapter = Model.Item1?.Chapters?.FirstOrDefault();
                var firstLesson = firstChapter?.Lessons?.FirstOrDefault();
            }

            @if (firstLesson != null)
            {
                <div class="d-flex flex-wrap align-items-end mb-16pt">
                    <h1 class="text-white flex m-0">@firstLesson.Title</h1>
                    <p class="h1 text-white-50 font-weight-light m-0">@firstLesson.EstimateTime</p>
                </div>

                <p class="hero__lead measure-hero-lead text-white-50 mb-24pt">@firstLesson.Description</p>
            }
            else
            {
                <p class="text-white-50">No lesson available.</p>
            }

            <div class="d-flex flex-column flex-sm-row align-items-center justify-content-start">
                <a href="lesson.html">
                    Watch trailer <i class="material-icons icon--right">play_circle_outline</i>
                </a>
                <a href="pricing.html"
                   class="btn btn-white">
                    Get started
                </a>
            </div>
        </div>
    </div>
    <div class="navbar navbar-expand-sm navbar-light bg-white border-bottom-2 navbar-list p-0 m-0 align-items-center">
        <div class="container page__container">
            <ul class="nav navbar-nav flex align-items-sm-center">
                <li class="nav-item navbar-list__item">
                    <div class="media align-items-center">
                        <span class="media-left mr-16pt">
                            <img src="@Url.Content(@Model.Item1?.Instructor?.Avatar) "
                                 width="40"
                                 alt="Instructor Avatar"
                                 class="rounded-circle">
                        </span>
                        <div class="media-body">
                            <a class="card-title m-0"
                               asp-controller="Instructor" asp-action="Profile" asp-route-id="@Model.Item1?.Instructor?.InstructorId">
                                @Model.Item1?.Instructor?.Name 
                            </a>
                            <p class="text-50 lh-1 mb-0">Instructor</p>
                        </div>
                    </div>
                </li>
                <li class="nav-item navbar-list__item">
                    <i class="material-icons text-muted icon--left">schedule</i>
                    2h 46m
                </li>
                <li class="nav-item navbar-list__item">
                    <i class="material-icons text-muted icon--left">assessment</i>
                    Beginner
                </li>
                <li class="nav-item ml-sm-auto text-sm-center flex-column navbar-list__item">
                    <div class="rating rating-24">
                        @{
                            var averageRating = 0.0; // Khởi tạo giá trị mặc định
                            if (Model.Item2 != null && Model.Item2.Any()) // Kiểm tra nếu Item2 không null và có ít nhất một đánh giá
                            {
                                averageRating = Model.Item2
                                    .Where(f => f.Rating.HasValue) // Lọc những đánh giá có Rating
                                    .DefaultIfEmpty() // Đảm bảo có giá trị mặc định
                                    .Average(f => f.Rating.HasValue ? f.Rating.Value : 0); // Tính trung bình
                            }
                        }
                        @for (int i = 1; i <= averageRating; i++)
                        {
                            <div class="rating__item">
                                <i class="material-icons">star</i>
                            </div>    
                        }
                        @for (int i = (int)averageRating + 1; i <= 5; i++)
                        {
                         
                            <div class="rating__item">
                                <i class="material-icons">star_border</i>
                            </div>   
                        }
                    </div>
                    <p class="lh-1 mb-0">
                        <small class="text-muted">@Model.Item2.Count() ratings</small>
                    </p>
                </li>
            </ul>
        </div>
    </div>

</div>
<!-- // END Header Layout Content -->